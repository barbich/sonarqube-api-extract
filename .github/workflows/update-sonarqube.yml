name: Refresh sonarqube spec
on:
  schedule:
    - cron: "15 4 * * *"
  workflow_dispatch:
    inputs:
      simulate:
        description: 'Simulate a succesfull check'
        default: false
        required: true
        type: boolean
jobs:
  pre-check:
    runs-on: ubuntu-latest
    outputs:
     update-required: ${{ steps.version_change.outputs.update-required }} 
    steps:
      - uses: actions/checkout@v4
      - name: Check version change
        id: version_change
        run: |
          # VERSION_API=$(curl -s https://raw.githubusercontent.com/barbich/sonarqube-spec/main/sonarqube-api.json | jq -r .info.version)
          VERSION_API=$(curl -s https://raw.githubusercontent.com/barbich/sonarqube-spec/improve-update/sonarqube-api.json | jq -r .info.version)
          VERSION_API_CURL=$(curl -s https://next.sonarqube.com/sonarqube/api/server/version)
          if [ "$VERSION_API_CURL" == "$VERSION_API" ];  then
            echo "Same version $VERSION_API_CURL $VERSION_API => No further processing required"
            echo "update-required=false" >> "$GITHUB_OUTPUT"
          else
            echo "Different versions $VERSION_API_CURL $VERSION_API"
            echo "update-required=true" >> "$GITHUB_OUTPUT"
          fi
  update:
    runs-on: ubuntu-latest
    needs: pre-check
    if: ${{  inputs.simulate == true || needs.pre-check.outputs.update-required == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.1'
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11.x"
      - name: Build
        id: sonarqube_spec_build
        run: |
          go get
          go build
      - name: Run sonarqube-spec-json
        id: sonarqube_spec_download_json
        run: |
          ./sonarqube-spec  -publicurl -outfile sonarqube-api.json -debug
      - name: Run openapi-generator to validate JSON
        id: openapi_validate_json
        run: |
          ls
          bash ./openapi-generator-cli.sh validate -i sonarqube-api.json
          ls
      - name: Run openapi-generator-cli convert
        id: openapi_convert
        run: |
          ./openapi-generator-cli.sh generate -g openapi-yaml -i sonarqube-api.json --skip-overwrite --skip-validate-spec --skip-operation-example -o output
          cp ./output/openapi/openapi.yaml sonarqube-api.yaml
      - name: Commit files
        id: commit_files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Automatic updates" sonarqube-api.yaml sonarqube-api.json
      - name: Push files
        continue-on-error: true
        run: |
          echo "Doing a push"
          git push origin
