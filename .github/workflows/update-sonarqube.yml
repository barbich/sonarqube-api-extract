name: Refresh sonarqube spec
on:
  schedule:
    - cron: "15 4 * * *"
  workflow_dispatch:               
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.1'
      - name: Build
        id: sonarqube_spec_build
        run: |
            go get
            go build
      - name: Run sonarqube-spec-json
        id: sonarqube_spec_download_json
        run: |
            ./sonarqube-spec  -publicurl -outfile sonarqube-api.json -debug
      - name: Generate and verify Git Tag
        id: generate_tag
        run: |
          git fetch --tags
          VERSION_API=$(jq -r .info.version sonarqube-api.json)
          IS_TAG=$(git tag --list "$VERSION_API")
          if [ "$IS_TAG" == "$VERSION_API" ];  then
            echo "Tag already present. Skipping further steps."
            echo "skip_on_tag=true" >> "$GITHUB_OUTPUT"
          else
            echo "skip_on_tag=false" >> "$GITHUB_OUTPUT"
          fi
          echo "NEW_TAG=$VERSION_API" >> $GITHUB_ENV
      - name: Check java found
        id: check_java
        if: steps.generate_tag.outputs.skip_on_tag == 'false'
        run: |
          if java --version; then
              echo "installed=true" >> "$GITHUB_OUTPUT"
              java --version
          else
              echo "installed=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Install java
        if: steps.check_java.outputs.installed == 'false' && ${{ env.ACT }} && steps.generate_tag.outputs.skip_on_tag == 'false'
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11.x"
          ACTIONS_STEP_DEBUG: true
      - uses: actions/setup-node@v4
        if: steps.generate_tag.outputs.skip_on_tag == 'false'
      - name: Run openapi-generator validate JSON
        id: openapi_validate_json
        if: steps.generate_tag.outputs.skip_on_tag == 'false'
        run: |
            npm install @openapitools/openapi-generator-cli -g
            openapi-generator-cli validate -i sonarqube-api.json
      - name: Run openapi-generator-cli convert
        id: openapi_convert
        if: steps.generate_tag.outputs.skip_on_tag == 'false'
        run: |
          openapi-generator-cli generate -g openapi-yaml -i sonarqube-api.json --skip-overwrite --skip-validate-spec --skip-operation-example -o output
          cp ./output/openapi/openapi.yaml sonarqube-api.yaml
      - name: Commit files
        id: commit_files
        if: steps.generate_tag.outputs.skip_on_tag == 'false'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Automatic updates"
      - name: Push files
        continue-on-error: true
        if: steps.generate_tag.outputs.skip_on_tag == 'false'
        run: |
          echo ${{join(steps.generate_tag.outputs.*, '\n')}}
          echo ${{join(steps.check_java.outputs.*, '\n')}}
          git tag $NEW_TAG
          git push origin --tags


