openapi: 3.0.3
info:
  description: Sonarqube Community Edition WebApi specifications.
  title: Sonarqube OpenAPI specification
  version: 10.6.0.90190
servers:
- url: https://next.sonarqube.com/sonarqube/
paths:
  /api/alm_integrations/import_azure_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform configuration key. This parameter is optional
          if you have only one Azure integration.
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Type<br/>New code definitions of
          the following types are allowed:<ul><li>PREVIOUS_VERSION</li><li>NUMBER_OF_DAYS</li><li>REFERENCE_BRANCH
          - will default to the main branch.</li></ul>
        in: query
        name: newCodeDefinitionType
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Value<br/>For each new code definition
          type, a different value is expected:<ul><li>no value, when the new code
          definition type is PREVIOUS_VERSION and REFERENCE_BRANCH</li><li>a number
          between 1 and 90, when the new code definition type is NUMBER_OF_DAYS</li></ul>
        in: query
        name: newCodeDefinitionValue
        schema:
          type: string
      - allowEmptyValue: true
        description: Azure project name
        in: query
        name: projectName
        schema:
          type: string
      - allowEmptyValue: true
        description: Azure repository name
        in: query
        name: repositoryName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to import_azure_project
  /api/alm_integrations/import_bitbucketcloud_repo:
    post:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform configuration key. This parameter is optional
          if you have only one BitBucket Cloud integration.
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Type<br/>New code definitions of
          the following types are allowed:<ul><li>PREVIOUS_VERSION</li><li>NUMBER_OF_DAYS</li><li>REFERENCE_BRANCH
          - will default to the main branch.</li></ul>
        in: query
        name: newCodeDefinitionType
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Value<br/>For each new code definition
          type, a different value is expected:<ul><li>no value, when the new code
          definition type is PREVIOUS_VERSION and REFERENCE_BRANCH</li><li>a number
          between 1 and 90, when the new code definition type is NUMBER_OF_DAYS</li></ul>
        in: query
        name: newCodeDefinitionValue
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket Cloud repository slug
        in: query
        name: repositorySlug
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to import_bitbucketcloud_repo
  /api/alm_integrations/import_bitbucketserver_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform configuration key. This parameter is optional
          if you have only one BitBucket Server integration.
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Type<br/>New code definitions of
          the following types are allowed:<ul><li>PREVIOUS_VERSION</li><li>NUMBER_OF_DAYS</li><li>REFERENCE_BRANCH
          - will default to the main branch.</li></ul>
        in: query
        name: newCodeDefinitionType
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Value<br/>For each new code definition
          type, a different value is expected:<ul><li>no value, when the new code
          definition type is PREVIOUS_VERSION and REFERENCE_BRANCH</li><li>a number
          between 1 and 90, when the new code definition type is NUMBER_OF_DAYS</li></ul>
        in: query
        name: newCodeDefinitionValue
        schema:
          type: string
      - allowEmptyValue: true
        description: BitbucketServer project key
        in: query
        name: projectKey
        schema:
          type: string
      - allowEmptyValue: true
        description: BitbucketServer repository slug
        in: query
        name: repositorySlug
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to import_bitbucketserver_project
  /api/alm_integrations/import_github_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform configuration key. This parameter is optional
          if you have only one GitHub integration.
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Type<br/>New code definitions of
          the following types are allowed:<ul><li>PREVIOUS_VERSION</li><li>NUMBER_OF_DAYS</li><li>REFERENCE_BRANCH
          - will default to the main branch.</li></ul>
        in: query
        name: newCodeDefinitionType
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Value<br/>For each new code definition
          type, a different value is expected:<ul><li>no value, when the new code
          definition type is PREVIOUS_VERSION and REFERENCE_BRANCH</li><li>a number
          between 1 and 90, when the new code definition type is NUMBER_OF_DAYS</li></ul>
        in: query
        name: newCodeDefinitionValue
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub repository key (organization/repoSlug
        in: query
        name: repositoryKey
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to import_github_project
  /api/alm_integrations/import_gitlab_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform configuration key. This parameter is optional
          if you have only one GitLab integration.
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: GitLab project ID
        in: query
        name: gitlabProjectId
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Type<br/>New code definitions of
          the following types are allowed:<ul><li>PREVIOUS_VERSION</li><li>NUMBER_OF_DAYS</li><li>REFERENCE_BRANCH
          - will default to the main branch.</li></ul>
        in: query
        name: newCodeDefinitionType
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Value<br/>For each new code definition
          type, a different value is expected:<ul><li>no value, when the new code
          definition type is PREVIOUS_VERSION and REFERENCE_BRANCH</li><li>a number
          between 1 and 90, when the new code definition type is NUMBER_OF_DAYS</li></ul>
        in: query
        name: newCodeDefinitionValue
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to import_gitlab_project
  /api/alm_integrations/list_azure_projects:
    get:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform setting key
        in: query
        name: almSetting
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list_azure_projects
  /api/alm_integrations/list_bitbucketserver_projects:
    get:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform setting key
        in: query
        name: almSetting
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list_bitbucketserver_projects
  /api/alm_integrations/search_azure_repos:
    get:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform setting key
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Project name filter
        in: query
        name: projectName
        schema:
          type: string
      - allowEmptyValue: true
        description: Search query filter
        in: query
        name: searchQuery
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search_azure_repos
  /api/alm_integrations/search_bitbucketcloud_repos:
    get:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform setting key
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 100
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Repository name filter
        in: query
        name: repositoryName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search_bitbucketcloud_repos
  /api/alm_integrations/search_bitbucketserver_repos:
    get:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform setting key
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Project name filter
        in: query
        name: projectName
        schema:
          type: string
      - allowEmptyValue: true
        description: Repository name filter
        in: query
        name: repositoryName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search_bitbucketserver_repos
  /api/alm_integrations/search_gitlab_repos:
    get:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform setting key
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Project name filter
        in: query
        name: projectName
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search_gitlab_repos
  /api/alm_integrations/set_pat:
    post:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform configuration key. This parameter is optional
          if you have only one single DevOps Platform integration.
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Personal Access Token
        in: query
        name: pat
        schema:
          type: string
      - allowEmptyValue: true
        description: Username
        in: query
        name: username
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_pat
  /api/alm_settings/count_binding:
    get:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform setting key
        in: query
        name: almSetting
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to count_binding
  /api/alm_settings/create_azure:
    post:
      parameters:
      - allowEmptyValue: true
        description: Unique key of the Azure Devops instance setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Azure Devops personal access token
        in: query
        name: personalAccessToken
        schema:
          type: string
      - allowEmptyValue: true
        description: Azure API URL
        in: query
        name: url
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create_azure
  /api/alm_settings/create_bitbucket:
    post:
      parameters:
      - allowEmptyValue: true
        description: Unique key of the Bitbucket instance setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket personal access token
        in: query
        name: personalAccessToken
        schema:
          type: string
      - allowEmptyValue: true
        description: BitBucket server API URL
        in: query
        name: url
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create_bitbucket
  /api/alm_settings/create_bitbucketcloud:
    post:
      parameters:
      - allowEmptyValue: true
        description: Bitbucket Cloud Client ID
        in: query
        name: clientId
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket Cloud Client Secret
        in: query
        name: clientSecret
        schema:
          type: string
      - allowEmptyValue: true
        description: Unique key of the Bitbucket Cloud setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket Cloud workspace ID
        in: query
        name: workspace
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create_bitbucketcloud
  /api/alm_settings/create_github:
    post:
      parameters:
      - allowEmptyValue: true
        description: GitHub App ID
        in: query
        name: appId
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub App Client ID
        in: query
        name: clientId
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub App Client Secret
        in: query
        name: clientSecret
        schema:
          type: string
      - allowEmptyValue: true
        description: Unique key of the GitHub instance setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub App private key
        in: query
        name: privateKey
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub API URL
        in: query
        name: url
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub App Webhook Secret
        in: query
        name: webhookSecret
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create_github
  /api/alm_settings/create_gitlab:
    post:
      parameters:
      - allowEmptyValue: true
        description: Unique key of the GitLab instance setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: GitLab personal access token
        in: query
        name: personalAccessToken
        schema:
          type: string
      - allowEmptyValue: true
        description: GitLab API URL
        in: query
        name: url
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create_gitlab
  /api/alm_settings/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: DevOps Platform Setting key
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/alm_settings/delete_binding:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete_binding
  /api/alm_settings/get_binding:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to get_binding
  /api/alm_settings/list:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/alm_settings/list_definitions:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list_definitions
  /api/alm_settings/set_azure_binding:
    post:
      parameters:
      - allowEmptyValue: true
        description: Azure DevOps setting key
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Is this project part of a monorepo
        in: query
        name: monorepo
        schema:
          type: string
      - allowEmptyValue: true
        description: SonarQube project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Azure project name
        in: query
        name: projectName
        schema:
          type: string
      - allowEmptyValue: true
        description: Azure repository name
        in: query
        name: repositoryName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_azure_binding
  /api/alm_settings/set_bitbucket_binding:
    post:
      parameters:
      - allowEmptyValue: true
        description: Bitbucket Server setting key
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Is this project part of a monorepo
        in: query
        name: monorepo
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket Server repository key
        in: query
        name: repository
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket repository slug
        in: query
        name: slug
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_bitbucket_binding
  /api/alm_settings/set_bitbucketcloud_binding:
    post:
      parameters:
      - allowEmptyValue: true
        description: Bitbucket Cloud setting key
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Is this project part of a monorepo
        in: query
        name: monorepo
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket Cloud repository key
        in: query
        name: repository
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_bitbucketcloud_binding
  /api/alm_settings/set_github_binding:
    post:
      parameters:
      - allowEmptyValue: true
        description: GitHub setting key
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Is this project part of a monorepo
        in: query
        name: monorepo
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub Repository
        in: query
        name: repository
        schema:
          type: string
      - allowEmptyValue: true
        description: Enable/disable summary in PR discussion tab
        in: query
        name: summaryCommentEnabled
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_github_binding
  /api/alm_settings/set_gitlab_binding:
    post:
      parameters:
      - allowEmptyValue: true
        description: GitLab setting key
        in: query
        name: almSetting
        schema:
          type: string
      - allowEmptyValue: true
        description: Is this project part of a monorepo
        in: query
        name: monorepo
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: GitLab project ID
        in: query
        name: repository
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_gitlab_binding
  /api/alm_settings/update_azure:
    post:
      parameters:
      - allowEmptyValue: true
        description: Unique key of the Azure instance setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Optional new value for an unique key of the Azure Devops instance
          setting
        in: query
        name: newKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Azure Devops personal access token
        in: query
        name: personalAccessToken
        schema:
          type: string
      - allowEmptyValue: true
        description: Azure API URL
        in: query
        name: url
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_azure
  /api/alm_settings/update_bitbucket:
    post:
      parameters:
      - allowEmptyValue: true
        description: Unique key of the Bitbucket instance setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Optional new value for an unique key of the Bitbucket instance
          setting
        in: query
        name: newKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket personal access token
        in: query
        name: personalAccessToken
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket API URL
        in: query
        name: url
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_bitbucket
  /api/alm_settings/update_bitbucketcloud:
    post:
      parameters:
      - allowEmptyValue: true
        description: Bitbucket Cloud Client ID
        in: query
        name: clientId
        schema:
          type: string
      - allowEmptyValue: true
        description: Optional new value for the Bitbucket Cloud client secret
        in: query
        name: clientSecret
        schema:
          type: string
      - allowEmptyValue: true
        description: Unique key of the Bitbucket Cloud setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Optional new value for an unique key of the Bitbucket Cloud setting
        in: query
        name: newKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Bitbucket Cloud workspace ID
        in: query
        name: workspace
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_bitbucketcloud
  /api/alm_settings/update_github:
    post:
      parameters:
      - allowEmptyValue: true
        description: GitHub API ID
        in: query
        name: appId
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub App Client ID
        in: query
        name: clientId
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub App Client Secret
        in: query
        name: clientSecret
        schema:
          type: string
      - allowEmptyValue: true
        description: Unique key of the GitHub instance setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Optional new value for an unique key of the GitHub instance setting
        in: query
        name: newKey
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub App private key
        in: query
        name: privateKey
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub API URL
        in: query
        name: url
        schema:
          type: string
      - allowEmptyValue: true
        description: GitHub App Webhook Secret
        in: query
        name: webhookSecret
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_github
  /api/alm_settings/update_gitlab:
    post:
      parameters:
      - allowEmptyValue: true
        description: Unique key of the GitLab instance setting
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Optional new value for an unique key of the GitLab instance setting
        in: query
        name: newKey
        schema:
          type: string
      - allowEmptyValue: true
        description: GitLab personal access token
        in: query
        name: personalAccessToken
        schema:
          type: string
      - allowEmptyValue: true
        description: GitLab API URL
        in: query
        name: url
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_gitlab
  /api/alm_settings/validate:
    get:
      parameters:
      - allowEmptyValue: true
        description: Unique key of the DevOps Platform settings
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to validate
  /api/analysis_cache/get:
    get:
      parameters:
      - allowEmptyValue: true
        description: Branch key. If not provided, main branch will be used.
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to get
  /api/applications/add_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the application
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the project
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_project
  /api/applications/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: Application description
        in: query
        name: description
        schema:
          type: string
      - allowEmptyValue: true
        description: Application key. A suitable key will be generated if not provided
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Application name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Whether the created application should be visible to everyone,
          or only specific user/groups.<br/>If no visibility is specified, the default
          visibility will be used.
        in: query
        name: visibility
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/applications/create_branch:
    post:
      parameters:
      - allowEmptyValue: true
        description: Application key
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch name
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project keys. To set several values, the parameter must be called
          once for each value.
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Project branches. To set main branch, provide an empty value.
          To set several values, the parameter must be called once for each value.
        in: query
        name: projectBranch
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create_branch
  /api/applications/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Application key
        in: query
        name: application
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/applications/delete_branch:
    post:
      parameters:
      - allowEmptyValue: true
        description: Application key
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch name
        in: query
        name: branch
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete_branch
  /api/applications/remove_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the application
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the project
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_project
  /api/applications/set_tags:
    post:
      parameters:
      - allowEmptyValue: true
        description: Application key
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of tags
        in: query
        name: tags
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_tags
  /api/applications/show:
    get:
      parameters:
      - allowEmptyValue: true
        description: Application key
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch name
        in: query
        name: branch
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to show
  /api/applications/update:
    post:
      parameters:
      - allowEmptyValue: true
        description: Application key
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: New description for the application
        in: query
        name: description
        schema:
          type: string
      - allowEmptyValue: true
        description: New name for the application
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update
  /api/applications/update_branch:
    post:
      parameters:
      - allowEmptyValue: true
        description: Application key
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch name
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: New branch name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Project keys. To set several values, the parameter must be called
          once for each value.
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Project branches. To set main branch, provide an empty value.
          To set several values, the parameter must be called once for each value.
        in: query
        name: projectBranch
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_branch
  /api/audit_logs/download:
    get:
      parameters:
      - allowEmptyValue: true
        description: Date in ISO 8601 datetime format (YYYY-MM-DDThh:mm:ss±hh:mm)
          from which the logs will be returned. Inclusive.
        in: query
        name: from
        schema:
          type: string
      - allowEmptyValue: true
        description: Date in ISO 8601 datetime format (YYYY-MM-DDThh:mm:ss±hh:mm)
          until which the logs will be returned. Inclusive.
        in: query
        name: to
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to download
  /api/authentication/login:
    post:
      parameters:
      - allowEmptyValue: true
        description: Login of the user
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: Password of the user
        in: query
        name: password
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to login
  /api/authentication/logout:
    post:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to logout
  /api/authentication/validate:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to validate
  /api/ce/activity:
    get:
      parameters:
      - allowEmptyValue: true
        description: Key of the component (project) to filter on
        in: query
        name: component
        schema:
          type: string
      - allowEmptyValue: true
        description: Maximum date of end of task processing (inclusive)
        in: query
        name: maxExecutedAt
        schema:
          type: string
      - allowEmptyValue: true
        description: Minimum date of task submission (inclusive)
        in: query
        name: minSubmittedAt
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter on the last tasks (only the most recent finished task
          by project)
        in: query
        name: onlyCurrents
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 1000
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Limit search to: <ul><li>component names that contain the supplied
          string</li><li>component keys that are exactly the same as the supplied
          string</li><li>task ids that are exactly the same as the supplied string</li></ul>'
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma separated list of task statuses
        in: query
        name: status
        schema:
          type: string
      - allowEmptyValue: true
        description: Task type
        in: query
        name: type
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to activity
  /api/ce/activity_status:
    get:
      parameters:
      - allowEmptyValue: true
        description: Key of the component (project) to filter on
        in: query
        name: component
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to activity_status
  /api/ce/component:
    get:
      parameters:
      - allowEmptyValue: true
        description: ""
        in: query
        name: component
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to component
  /api/ce/task:
    get:
      parameters:
      - allowEmptyValue: true
        description: Comma-separated list of the optional fields to be returned in
          response.
        in: query
        name: additionalFields
        schema:
          type: string
      - allowEmptyValue: true
        description: Id of task
        in: query
        name: id
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to task
  /api/components/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Limit search to: <ul><li>component names that contain the supplied
          string</li><li>component keys that are exactly the same as the supplied
          string</li></ul><br>The value length of the param must be between 2 and
          15 (inclusive) characters. In case longer value is provided it will be truncated.'
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of component qualifiers. Filter the results
          with the specified qualifiers. Possible values are:<ul><li>APP - Applications</li><li>VW
          - Portfolios</li><li>SVW - Portfolios</li><li>TRK - Projects</li></ul>
        in: query
        name: qualifiers
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/components/show:
    get:
      parameters:
      - allowEmptyValue: true
        description: Branch key. Not available in the community edition.
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Component key
        in: query
        name: component
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id. Not available in the community edition.
        in: query
        name: pullRequest
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to show
  /api/components/tree:
    get:
      parameters:
      - allowEmptyValue: true
        description: Ascending sort
        in: query
        name: asc
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch key. Not available in the community edition.
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Base component key. The search is based on this component.
        in: query
        name: component
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id. Not available in the community edition.
        in: query
        name: pullRequest
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Limit search to: <ul><li>component names that contain the supplied
          string</li><li>component keys that are exactly the same as the supplied
          string</li></ul>'
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of component qualifiers. Filter the results
          with the specified qualifiers. Possible values are:<ul><li>APP - Applications</li><li>VW
          - Portfolios</li><li>SVW - Portfolios</li><li>UTS - Test Files</li><li>FIL
          - Files</li><li>DIR - Directories</li><li>TRK - Projects</li></ul>
        in: query
        name: qualifiers
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of sort fields
        in: query
        name: s
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Strategy to search for base component descendants:<ul><li>children:
          return the children components of the base component. Grandchildren components
          are not returned</li><li>all: return all the descendants components of the
          base component. Grandchildren are returned.</li><li>leaves: return all the
          descendant components (files, in general) which don''t have other children.
          They are the leaves of the component tree.</li></ul>'
        in: query
        name: strategy
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to tree
  /api/duplications/show:
    get:
      parameters:
      - allowEmptyValue: true
        description: File key
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to show
  /api/editions/activate_grace_period:
    post:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to activate_grace_period
  /api/editions/set_license:
    post:
      parameters:
      - allowEmptyValue: true
        description: ""
        in: query
        name: license
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_license
  /api/favorites/add:
    post:
      parameters:
      - allowEmptyValue: true
        description: Component key. Only components with qualifiers TRK, VW, SVW,
          APP are supported
        in: query
        name: component
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add
  /api/favorites/remove:
    post:
      parameters:
      - allowEmptyValue: true
        description: Component key
        in: query
        name: component
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove
  /api/favorites/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/hotspots/change_status:
    post:
      parameters:
      - allowEmptyValue: true
        description: Comment text.
        in: query
        name: comment
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the Security Hotspot
        in: query
        name: hotspot
        schema:
          type: string
      - allowEmptyValue: true
        description: Resolution of the Security Hotspot when new status is REVIEWED,
          otherwise must not be set.
        in: query
        name: resolution
        schema:
          type: string
      - allowEmptyValue: true
        description: New status of the Security Hotspot.
        in: query
        name: status
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to change_status
  /api/hotspots/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: Branch key. Not available in the community edition.
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of CWE numbers
        in: query
        name: cwe
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of files. Returns only hotspots found in
          those files
        in: query
        name: files
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Security Hotspot keys. This parameter
          is required unless project is provided.
        in: query
        name: hotspots
        schema:
          type: string
      - allowEmptyValue: true
        description: If 'inNewCodePeriod' is provided, only Security Hotspots created
          in the new code period are returned.
        in: query
        name: inNewCodePeriod
        schema:
          type: string
      - allowEmptyValue: true
        description: If 'projectKey' is provided, returns only Security Hotspots assigned
          to the current user
        in: query
        name: onlyMine
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP ASVS v4.0 categories or rules.
        in: query
        name: owaspAsvs-4.0
        schema:
          type: string
      - allowEmptyValue: true
        description: Filters hotspots with lower or equal OWASP ASVS level to the
          parameter value. Should be used in combination with the 'owaspAsvs-4.0'
          parameter.
        in: query
        name: owaspAsvsLevel
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP 2017 Top 10 lowercase categories.
        in: query
        name: owaspTop10
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP 2021 Top 10 lowercase categories.
        in: query
        name: owaspTop10-2021
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of PCI DSS v3.2 categories.
        in: query
        name: pciDss-3.2
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of PCI DSS v4.0 categories.
        in: query
        name: pciDss-4.0
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the project or application. This parameter is required
          unless hotspots is provided.
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0.
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id. Not available in the community edition.
        in: query
        name: pullRequest
        schema:
          type: string
      - allowEmptyValue: true
        description: If 'project' is provided and if status is 'REVIEWED', only Security
          Hotspots with the specified resolution are returned.
        in: query
        name: resolution
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SANS Top 25 categories.
        in: query
        name: sansTop25
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SonarSource security categories. Use
          'others' to select issues not associated with any category
        in: query
        name: sonarsourceSecurity
        schema:
          type: string
      - allowEmptyValue: true
        description: If 'project' is provided, only Security Hotspots with the specified
          status are returned.
        in: query
        name: status
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/hotspots/show:
    get:
      parameters:
      - allowEmptyValue: true
        description: Key of the Security Hotspot
        in: query
        name: hotspot
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to show
  /api/issues/add_comment:
    post:
      parameters:
      - allowEmptyValue: true
        description: Issue key
        in: query
        name: issue
        schema:
          type: string
      - allowEmptyValue: true
        description: Comment text
        in: query
        name: text
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_comment
  /api/issues/assign:
    post:
      parameters:
      - allowEmptyValue: true
        description: Login of the assignee. When not set, it will unassign the issue.
          Use '_me' to assign to current user
        in: query
        name: assignee
        schema:
          type: string
      - allowEmptyValue: true
        description: Issue key
        in: query
        name: issue
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to assign
  /api/issues/authors:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 100
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to authors that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to authors
  /api/issues/bulk_change:
    post:
      parameters:
      - allowEmptyValue: true
        description: Add tags
        in: query
        name: add_tags
        schema:
          type: string
      - allowEmptyValue: true
        description: To assign the list of issues to a specific user (login), or un-assign
          all the issues
        in: query
        name: assign
        schema:
          type: string
      - allowEmptyValue: true
        description: Add a comment. The comment will only be added to issues that
          are affected either by a change of type or a change of severity as a result
          of the same WS call.
        in: query
        name: comment
        schema:
          type: string
      - allowEmptyValue: true
        description: Transition
        in: query
        name: do_transition
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of issue keys
        in: query
        name: issues
        schema:
          type: string
      - allowEmptyValue: true
        description: Remove tags
        in: query
        name: remove_tags
        schema:
          type: string
      - allowEmptyValue: true
        description: ""
        in: query
        name: sendNotifications
        schema:
          type: string
      - allowEmptyValue: true
        description: To change the severity of the list of issues
        in: query
        name: set_severity
        schema:
          type: string
      - allowEmptyValue: true
        description: To change the type of the list of issues
        in: query
        name: set_type
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to bulk_change
  /api/issues/changelog:
    get:
      parameters:
      - allowEmptyValue: true
        description: Issue key
        in: query
        name: issue
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to changelog
  /api/issues/delete_comment:
    post:
      parameters:
      - allowEmptyValue: true
        description: Comment key
        in: query
        name: comment
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete_comment
  /api/issues/do_transition:
    post:
      parameters:
      - allowEmptyValue: true
        description: Issue key
        in: query
        name: issue
        schema:
          type: string
      - allowEmptyValue: true
        description: Transition
        in: query
        name: transition
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to do_transition
  /api/issues/edit_comment:
    post:
      parameters:
      - allowEmptyValue: true
        description: Comment key
        in: query
        name: comment
        schema:
          type: string
      - allowEmptyValue: true
        description: Comment text
        in: query
        name: text
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to edit_comment
  /api/issues/gitlab_sast_export:
    get:
      parameters:
      - allowEmptyValue: true
        description: Branch key.If this parameter is set, pullRequest must not be
          set.
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: The project key for which the vulnerabilities are being fetched
        in: query
        name: projectKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id.If this parameter is set, branch must not be
          set.
        in: query
        name: pullRequest
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to gitlab_sast_export
  /api/issues/reindex:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to reindex
  /api/issues/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: Comma-separated list of the optional fields to be returned in
          response. Action plans are dropped in 5.5, it is not returned in the response.
        in: query
        name: additionalFields
        schema:
          type: string
      - allowEmptyValue: true
        description: Ascending sort
        in: query
        name: asc
        schema:
          type: string
      - allowEmptyValue: true
        description: To retrieve assigned or unassigned issues
        in: query
        name: assigned
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of assignee logins. The value '__me__' can
          be used as a placeholder for user who performs the request
        in: query
        name: assignees
        schema:
          type: string
      - allowEmptyValue: true
        description: SCM accounts. To set several values, the parameter must be called
          once for each value.
        in: query
        name: author
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch key. Not available in the community edition.
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Clean Code Attribute Categories
        in: query
        name: cleanCodeAttributeCategories
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of code variants.
        in: query
        name: codeVariants
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of component keys. Retrieve issues associated
          to a specific list of components (and all its descendants). A component
          can be a portfolio, project, module, directory or file.
        in: query
        name: components
        schema:
          type: string
      - allowEmptyValue: true
        description: To retrieve issues created after the given date (inclusive).
          <br>Either a date (use 'timeZone' attribute or it will default to server
          timezone) or datetime can be provided. <br>If this parameter is set, createdInLast
          must not be set
        in: query
        name: createdAfter
        schema:
          type: string
      - allowEmptyValue: true
        description: Datetime to retrieve issues created during a specific analysis
        in: query
        name: createdAt
        schema:
          type: string
      - allowEmptyValue: true
        description: To retrieve issues created before the given date (exclusive).
          <br>Either a date (use 'timeZone' attribute or it will default to server
          timezone) or datetime can be provided.
        in: query
        name: createdBefore
        schema:
          type: string
      - allowEmptyValue: true
        description: To retrieve issues created during a time span before the current
          time (exclusive). Accepted units are 'y' for year, 'm' for month, 'w' for
          week and 'd' for day. If this parameter is set, createdAfter must not be
          set
        in: query
        name: createdInLast
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of CWE identifiers. Use 'unknown' to select
          issues not associated to any CWE.
        in: query
        name: cwe
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of the facets to be computed. No facet is
          computed by default.
        in: query
        name: facets
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id to filter issues that would be fixed in the specified
          project or branch by the pull request. Should not be used together with
          + 'pullRequest'. At least the 'components' must be be specified when this
          param is used.  Not available in the community edition.
        in: query
        name: fixedInPullRequest
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Software Quality Severities
        in: query
        name: impactSeverities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Software Qualities
        in: query
        name: impactSoftwareQualities
        schema:
          type: string
      - allowEmptyValue: true
        description: To retrieve issues created in the new code period.<br>If this
          parameter is set to a truthy value, createdAfter must not be set and one
          component uuid or key must be provided.
        in: query
        name: inNewCodePeriod
        schema:
          type: string
      - allowEmptyValue: true
        description: ""
        in: query
        name: issueStatuses
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of issue keys
        in: query
        name: issues
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of languages. Available since 4.4
        in: query
        name: languages
        schema:
          type: string
      - allowEmptyValue: true
        description: Return only issues at a component's level, not on its descendants
          (modules, directories, files, etc). This parameter is only considered when
          componentKeys is set.
        in: query
        name: onComponentOnly
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP ASVS v4.0 categories.
        in: query
        name: owaspAsvs-4.0
        schema:
          type: string
      - allowEmptyValue: true
        description: Level of OWASP ASVS categories.
        in: query
        name: owaspAsvsLevel
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP Top 10 2017 lowercase categories.
        in: query
        name: owaspTop10
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP Top 10 2021 lowercase categories.
        in: query
        name: owaspTop10-2021
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of PCI DSS v3.2 categories.
        in: query
        name: pciDss-3.2
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of PCI DSS v4.0 categories.
        in: query
        name: pciDss-4.0
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id. Not available in the community edition.
        in: query
        name: pullRequest
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of resolutions
        in: query
        name: resolutions
        schema:
          type: string
      - allowEmptyValue: true
        description: To match resolved or unresolved issues
        in: query
        name: resolved
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of coding rule keys. Format is &lt;repository&gt;:&lt;rule&gt;
        in: query
        name: rules
        schema:
          type: string
      - allowEmptyValue: true
        description: Sort field
        in: query
        name: s
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SANS Top 25 categories.
        in: query
        name: sansTop25
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of scopes. Available since 8.5
        in: query
        name: scopes
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of severities
        in: query
        name: severities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SonarSource security categories. Use
          'others' to select issues not associated with any category
        in: query
        name: sonarsourceSecurity
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of statuses
        in: query
        name: statuses
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of tags.
        in: query
        name: tags
        schema:
          type: string
      - allowEmptyValue: true
        description: To resolve dates passed to 'createdAfter' or 'createdBefore'
          (does not apply to datetime) and to compute creation date histogram
        in: query
        name: timeZone
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of types.
        in: query
        name: types
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/issues/set_severity:
    post:
      parameters:
      - allowEmptyValue: true
        description: Issue key
        in: query
        name: issue
        schema:
          type: string
      - allowEmptyValue: true
        description: New severity
        in: query
        name: severity
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_severity
  /api/issues/set_tags:
    post:
      parameters:
      - allowEmptyValue: true
        description: Issue key
        in: query
        name: issue
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of tags. All tags are removed if parameter
          is empty or not set.
        in: query
        name: tags
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_tags
  /api/issues/set_type:
    post:
      parameters:
      - allowEmptyValue: true
        description: Issue key
        in: query
        name: issue
        schema:
          type: string
      - allowEmptyValue: true
        description: New type
        in: query
        name: type
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_type
  /api/issues/tags:
    get:
      parameters:
      - allowEmptyValue: true
        description: Indicator to search for all tags or only for tags in the main
          branch of a project
        in: query
        name: all
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to tags that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to tags
  /api/languages/list:
    get:
      parameters:
      - allowEmptyValue: true
        description: The size of the list to return, 0 for all languages
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: A pattern to match language keys/names against
        in: query
        name: q
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/measures/component:
    get:
      parameters:
      - allowEmptyValue: true
        description: Comma-separated list of additional fields that can be returned
          in the response.
        in: query
        name: additionalFields
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch key. Not available in the community edition.
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Component key
        in: query
        name: component
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of metric keys
        in: query
        name: metricKeys
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id. Not available in the community edition.
        in: query
        name: pullRequest
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to component
  /api/measures/component_tree:
    get:
      parameters:
      - allowEmptyValue: true
        description: Comma-separated list of additional fields that can be returned
          in the response.
        in: query
        name: additionalFields
        schema:
          type: string
      - allowEmptyValue: true
        description: Ascending sort
        in: query
        name: asc
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch key. Not available in the community edition.
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Component key. The search is based on this component.
        in: query
        name: component
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of metric keys. Types DISTRIB are not allowed.
          For type DATA only maintainability_issues, reliability_issues, new_maintainability_issues,
          new_security_issues, new_reliability_issues, security_issues metrics are
          supported
        in: query
        name: metricKeys
        schema:
          type: string
      - allowEmptyValue: true
        description: Sort measures by leak period or not ?. The 's' parameter must
          contain the 'metricPeriod' value.
        in: query
        name: metricPeriodSort
        schema:
          type: string
      - allowEmptyValue: true
        description: Metric key to sort by. The 's' parameter must contain the 'metric'
          or 'metricPeriod' value. It must be part of the 'metricKeys' parameter
        in: query
        name: metricSort
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Filter components. Sort must be on a metric. Possible values
          are: <ul><li>all: return all components</li><li>withMeasuresOnly: filter
          out components that do not have a measure on the sorted metric</li></ul>'
        in: query
        name: metricSortFilter
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id. Not available in the community edition.
        in: query
        name: pullRequest
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Limit search to: <ul><li>component names that contain the supplied
          string</li><li>component keys that are exactly the same as the supplied
          string</li></ul>'
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of component qualifiers. Filter the results
          with the specified qualifiers. Possible values are:<ul><li>APP - Applications</li><li>VW
          - Portfolios</li><li>SVW - Portfolios</li><li>UTS - Test Files</li><li>FIL
          - Files</li><li>DIR - Directories</li><li>TRK - Projects</li></ul>
        in: query
        name: qualifiers
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of sort fields
        in: query
        name: s
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Strategy to search for base component descendants:<ul><li>children:
          return the children components of the base component. Grandchildren components
          are not returned</li><li>all: return all the descendants components of the
          base component. Grandchildren are returned.</li><li>leaves: return all the
          descendant components (files, in general) which don''t have other children.
          They are the leaves of the component tree.</li></ul>'
        in: query
        name: strategy
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to component_tree
  /api/measures/search_history:
    get:
      parameters:
      - allowEmptyValue: true
        description: Branch key. Not available in the community edition.
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Component key
        in: query
        name: component
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter measures created after the given date (inclusive). <br>Either
          a date (server timezone) or datetime can be provided
        in: query
        name: from
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of metric keys
        in: query
        name: metrics
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 1000
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id. Not available in the community edition.
        in: query
        name: pullRequest
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter measures created before the given date (inclusive). <br>Either
          a date (server timezone) or datetime can be provided
        in: query
        name: to
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search_history
  /api/metrics/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/metrics/types:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to types
  /api/monitoring/metrics:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to metrics
  /api/new_code_periods/list:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/new_code_periods/set:
    post:
      parameters:
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Type<br/>New code definitions of the following types are allowed:<ul><li>SPECIFIC_ANALYSIS
          - can be set at branch level only</li><li>PREVIOUS_VERSION - can be set
          at any level (global, project, branch)</li><li>NUMBER_OF_DAYS - can be set
          at any level (global, project, branch)</li><li>REFERENCE_BRANCH - can only
          be set for projects and branches</li></ul>
        in: query
        name: type
        schema:
          type: string
      - allowEmptyValue: true
        description: Value<br/>For each type, a different value is expected:<ul><li>the
          uuid of an analysis, when type is SPECIFIC_ANALYSIS</li><li>no value, when
          type is PREVIOUS_VERSION</li><li>a number between 1 and 90, when type is
          NUMBER_OF_DAYS</li><li>a string, when type is REFERENCE_BRANCH</li></ul>
        in: query
        name: value
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set
  /api/new_code_periods/show:
    get:
      parameters:
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to show
  /api/new_code_periods/unset:
    post:
      parameters:
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to unset
  /api/notifications/add:
    post:
      parameters:
      - allowEmptyValue: true
        description: Channel through which the notification is sent. For example,
          notifications can be sent by email.
        in: query
        name: channel
        schema:
          type: string
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Notification type. Possible values are for:<ul>  <li>Global
          notifications: CeReportTaskFailure, ChangesOnMyIssue, NewAlerts, SQ-MyNewIssues</li>  <li>Per
          project notifications: CeReportTaskFailure, ChangesOnMyIssue, NewAlerts,
          NewFalsePositiveIssue, NewIssues, SQ-MyNewIssues</li></ul>'
        in: query
        name: type
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add
  /api/notifications/list:
    get:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/notifications/remove:
    post:
      parameters:
      - allowEmptyValue: true
        description: Channel through which the notification is sent. For example,
          notifications can be sent by email.
        in: query
        name: channel
        schema:
          type: string
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Notification type. Possible values are for:<ul>  <li>Global
          notifications: CeReportTaskFailure, ChangesOnMyIssue, NewAlerts, SQ-MyNewIssues</li>  <li>Per
          project notifications: CeReportTaskFailure, ChangesOnMyIssue, NewAlerts,
          NewFalsePositiveIssue, NewIssues, SQ-MyNewIssues</li></ul>'
        in: query
        name: type
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove
  /api/permissions/add_group:
    post:
      parameters:
      - allowEmptyValue: true
        description: Group name or 'anyone' (case insensitive)
        in: query
        name: groupName
        schema:
          type: string
      - allowEmptyValue: true
        description: 'The permission you would like to grant to the group.<ul><li>Possible
          values for global permissions: admin, gateadmin, profileadmin, provisioning,
          scan, applicationcreator, portfoliocreator</li><li>Possible values for project
          permissions admin, codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>'
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Project id
        in: query
        name: projectId
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: projectKey
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_group
  /api/permissions/add_group_to_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Group name or 'anyone' (case insensitive)
        in: query
        name: groupName
        schema:
          type: string
      - allowEmptyValue: true
        description: Permission<ul><li>Possible values for project permissions admin,
          codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_group_to_template
  /api/permissions/add_project_creator_to_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Permission<ul><li>Possible values for project permissions admin,
          codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_project_creator_to_template
  /api/permissions/add_user:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: 'The permission you would like to grant to the user<ul><li>Possible
          values for global permissions: admin, gateadmin, profileadmin, provisioning,
          scan, applicationcreator, portfoliocreator</li><li>Possible values for project
          permissions admin, codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>'
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Project id
        in: query
        name: projectId
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: projectKey
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_user
  /api/permissions/add_user_to_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: Permission<ul><li>Possible values for project permissions admin,
          codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_user_to_template
  /api/permissions/apply_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project id
        in: query
        name: projectId
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: projectKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to apply_template
  /api/permissions/bulk_apply_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Filter the projects for which last analysis is older than the
          given date (exclusive).<br> Either a date (server timezone) or datetime
          can be provided.
        in: query
        name: analyzedBefore
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter the projects that are provisioned
        in: query
        name: onProvisionedOnly
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of project keys
        in: query
        name: projects
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Limit search to: <ul><li>project names that contain the supplied
          string</li><li>project keys that are exactly the same as the supplied string</li></ul>'
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of component qualifiers. Filter the results
          with the specified qualifiers. Possible values are:<ul><li>APP - Applications</li><li>TRK
          - Projects</li><li>VW - Portfolios</li></ul>
        in: query
        name: qualifiers
        schema:
          type: string
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to bulk_apply_template
  /api/permissions/create_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Description
        in: query
        name: description
        schema:
          type: string
      - allowEmptyValue: true
        description: Name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key pattern. Must be a valid Java regular expression
        in: query
        name: projectKeyPattern
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create_template
  /api/permissions/delete_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete_template
  /api/permissions/remove_group:
    post:
      parameters:
      - allowEmptyValue: true
        description: Group name or 'anyone' (case insensitive)
        in: query
        name: groupName
        schema:
          type: string
      - allowEmptyValue: true
        description: 'The permission you would like to revoke from the group.<ul><li>Possible
          values for global permissions: admin, gateadmin, profileadmin, provisioning,
          scan, applicationcreator, portfoliocreator</li><li>Possible values for project
          permissions admin, codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>'
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Project id
        in: query
        name: projectId
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: projectKey
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_group
  /api/permissions/remove_group_from_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Group name or 'anyone' (case insensitive)
        in: query
        name: groupName
        schema:
          type: string
      - allowEmptyValue: true
        description: Permission<ul><li>Possible values for project permissions admin,
          codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_group_from_template
  /api/permissions/remove_project_creator_from_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Permission<ul><li>Possible values for project permissions admin,
          codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_project_creator_from_template
  /api/permissions/remove_user:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: 'The permission you would like to revoke from the user.<ul><li>Possible
          values for global permissions: admin, gateadmin, profileadmin, provisioning,
          scan, applicationcreator, portfoliocreator</li><li>Possible values for project
          permissions admin, codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>'
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Project id
        in: query
        name: projectId
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: projectKey
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_user
  /api/permissions/remove_user_from_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: Permission<ul><li>Possible values for project permissions admin,
          codeviewer, issueadmin, securityhotspotadmin, scan, user</li></ul>
        in: query
        name: permission
        schema:
          type: string
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_user_from_template
  /api/permissions/search_templates:
    get:
      parameters:
      - allowEmptyValue: true
        description: Limit search to permission template names that contain the supplied
          string.
        in: query
        name: q
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search_templates
  /api/permissions/set_default_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project qualifier. Filter the results with the specified qualifier.
          Possible values are:<ul><li>APP - Applications</li><li>TRK - Projects</li><li>VW
          - Portfolios</li></ul>
        in: query
        name: qualifier
        schema:
          type: string
      - allowEmptyValue: true
        description: Template id
        in: query
        name: templateId
        schema:
          type: string
      - allowEmptyValue: true
        description: Template name
        in: query
        name: templateName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_default_template
  /api/permissions/update_template:
    post:
      parameters:
      - allowEmptyValue: true
        description: Description
        in: query
        name: description
        schema:
          type: string
      - allowEmptyValue: true
        description: Id
        in: query
        name: id
        schema:
          type: string
      - allowEmptyValue: true
        description: Name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key pattern. Must be a valid Java regular expression
        in: query
        name: projectKeyPattern
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_template
  /api/plugins/available:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to available
  /api/plugins/cancel_all:
    post:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to cancel_all
  /api/plugins/install:
    post:
      parameters:
      - allowEmptyValue: true
        description: The key identifying the plugin to install
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to install
  /api/plugins/installed:
    get:
      parameters:
      - allowEmptyValue: true
        description: Comma-separated list of the additional fields to be returned
          in response. No additional field is returned by default. Possible values
          are:<ul><li>category - category as defined in the Update Center. A connection
          to the Update Center is needed</li></ul>
        in: query
        name: f
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to installed
  /api/plugins/pending:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to pending
  /api/plugins/uninstall:
    post:
      parameters:
      - allowEmptyValue: true
        description: The key identifying the plugin to uninstall
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to uninstall
  /api/plugins/update:
    post:
      parameters:
      - allowEmptyValue: true
        description: The key identifying the plugin to update
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update
  /api/plugins/updates:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to updates
  /api/project_analyses/create_event:
    post:
      parameters:
      - allowEmptyValue: true
        description: Analysis key
        in: query
        name: analysis
        schema:
          type: string
      - allowEmptyValue: true
        description: Category
        in: query
        name: category
        schema:
          type: string
      - allowEmptyValue: true
        description: Name
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create_event
  /api/project_analyses/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Analysis key
        in: query
        name: analysis
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/project_analyses/delete_event:
    post:
      parameters:
      - allowEmptyValue: true
        description: Event key
        in: query
        name: event
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete_event
  /api/project_analyses/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: Event category. Filter analyses that have at least one event
          of the category specified.
        in: query
        name: category
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter analyses created after the given date (inclusive). <br>Either
          a date (server timezone) or datetime can be provided
        in: query
        name: from
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter analyses created before the given date (inclusive). <br>Either
          a date (server timezone) or datetime can be provided
        in: query
        name: to
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/project_analyses/update_event:
    post:
      parameters:
      - allowEmptyValue: true
        description: Event key
        in: query
        name: event
        schema:
          type: string
      - allowEmptyValue: true
        description: New name
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_event
  /api/project_badges/measure:
    get:
      parameters:
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Metric key
        in: query
        name: metric
        schema:
          type: string
      - allowEmptyValue: true
        description: Project or application key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Project badge token
        in: query
        name: token
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to measure
  /api/project_badges/quality_gate:
    get:
      parameters:
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project or application key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Project badge token
        in: query
        name: token
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to quality_gate
  /api/project_badges/renew_token:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project or application key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to renew_token
  /api/project_badges/token:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project or application key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to token
  /api/project_branches/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/project_branches/list:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/project_branches/rename:
    post:
      parameters:
      - allowEmptyValue: true
        description: New name of the main branch
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to rename
  /api/project_branches/set_automatic_deletion_protection:
    post:
      parameters:
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Sets whether the branch should be protected from automatic deletion
          when it hasn't been analyzed for a set period of time.
        in: query
        name: value
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_automatic_deletion_protection
  /api/project_branches/set_main:
    post:
      parameters:
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_main
  /api/project_dump/export:
    post:
      parameters:
      - allowEmptyValue: true
        description: ""
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to export
  /api/project_dump/import:
    post:
      parameters:
      - allowEmptyValue: true
        description: ""
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to import
  /api/project_links/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: Link name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Project id
        in: query
        name: projectId
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: projectKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Link url
        in: query
        name: url
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/project_links/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Link id
        in: query
        name: id
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/project_links/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project Id
        in: query
        name: projectId
        schema:
          type: string
      - allowEmptyValue: true
        description: Project Key
        in: query
        name: projectKey
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/project_pull_requests/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id
        in: query
        name: pullRequest
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/project_pull_requests/list:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/project_tags/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 100
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to tags that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/project_tags/set:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of tags
        in: query
        name: tags
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set
  /api/projects/bulk_delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Filter the projects for which last analysis of any branch is
          older than the given date (exclusive).<br> Either a date (server timezone)
          or datetime can be provided.
        in: query
        name: analyzedBefore
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter the projects that are provisioned
        in: query
        name: onProvisionedOnly
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of project keys
        in: query
        name: projects
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Limit to: <ul><li>component names that contain the supplied
          string</li><li>component keys that contain the supplied string</li></ul>'
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of component qualifiers. Filter the results
          with the specified qualifiers
        in: query
        name: qualifiers
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to bulk_delete
  /api/projects/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the main branch of the project. If not provided, the default
          main branch key will be used.
        in: query
        name: mainBranch
        schema:
          type: string
      - allowEmptyValue: true
        description: Name of the project. If name is longer than 500, it is abbreviated.
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Type<br/>New code definitions of
          the following types are allowed:<ul><li>PREVIOUS_VERSION</li><li>NUMBER_OF_DAYS</li><li>REFERENCE_BRANCH
          - will default to the main branch.</li></ul>
        in: query
        name: newCodeDefinitionType
        schema:
          type: string
      - allowEmptyValue: true
        description: Project New Code Definition Value<br/>For each new code definition
          type, a different value is expected:<ul><li>no value, when the new code
          definition type is PREVIOUS_VERSION and REFERENCE_BRANCH</li><li>a number
          between 1 and 90, when the new code definition type is NUMBER_OF_DAYS</li></ul>
        in: query
        name: newCodeDefinitionValue
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the project
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Whether the created project should be visible to everyone, or
          only specific user/groups.<br/>If no visibility is specified, the default
          project visibility will be used.
        in: query
        name: visibility
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/projects/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/projects/export_findings:
    get:
      parameters:
      - allowEmptyValue: true
        description: Branch key. When not specified, if no Pull Request key is defined
          either, it will default to the main branch
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull Request key. When not specified, the branch data will be
          returned instead
        in: query
        name: pullRequest
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to export_findings
  /api/projects/license_usage:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to license_usage
  /api/projects/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: Filter the projects for which the last analysis of all branches
          are older than the given date (exclusive).<br> Either a date (server timezone)
          or datetime can be provided.
        in: query
        name: analyzedBefore
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter the projects that are provisioned
        in: query
        name: onProvisionedOnly
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of project keys
        in: query
        name: projects
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Limit search to: <ul><li>component names that contain the supplied
          string</li><li>component keys that contain the supplied string</li></ul>'
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of component qualifiers. Filter the results
          with the specified qualifiers
        in: query
        name: qualifiers
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/projects/update_key:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: from
        schema:
          type: string
      - allowEmptyValue: true
        description: New project key
        in: query
        name: to
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_key
  /api/projects/update_visibility:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project, application or portfolio key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: New visibility
        in: query
        name: visibility
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_visibility
  /api/qualitygates/add_group:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality Gate name
        in: query
        name: gateName
        schema:
          type: string
      - allowEmptyValue: true
        description: Group name or 'anyone' (case insensitive)
        in: query
        name: groupName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_group
  /api/qualitygates/add_user:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality Gate name
        in: query
        name: gateName
        schema:
          type: string
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_user
  /api/qualitygates/copy:
    post:
      parameters:
      - allowEmptyValue: true
        description: The name of the quality gate to create
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: The name of the quality gate to copy
        in: query
        name: sourceName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to copy
  /api/qualitygates/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: The name of the quality gate to create
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/qualitygates/create_condition:
    post:
      parameters:
      - allowEmptyValue: true
        description: Condition error threshold
        in: query
        name: error
        schema:
          type: string
      - allowEmptyValue: true
        description: Name of the quality gate
        in: query
        name: gateName
        schema:
          type: string
      - allowEmptyValue: true
        description: Condition metric.<br/> Only metric of the following types are
          allowed:<ul><li>INT</li><li>MILLISEC</li><li>RATING</li><li>WORK_DUR</li><li>FLOAT</li><li>PERCENT</li><li>LEVEL</li></ul>Following
          metrics are forbidden:<ul><li>alert_status</li><li>security_hotspots</li><li>new_security_hotspots</li></ul>
        in: query
        name: metric
        schema:
          type: string
      - allowEmptyValue: true
        description: Condition operator:<br/><ul><li>LT = is lower than</li><li>GT
          = is greater than</li></ul>
        in: query
        name: op
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create_condition
  /api/qualitygates/delete_condition:
    post:
      parameters:
      - allowEmptyValue: true
        description: Condition UUID
        in: query
        name: id
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete_condition
  /api/qualitygates/deselect:
    post:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: projectKey
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to deselect
  /api/qualitygates/destroy:
    post:
      parameters:
      - allowEmptyValue: true
        description: Name of the quality gate to delete
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to destroy
  /api/qualitygates/get_by_project:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to get_by_project
  /api/qualitygates/list:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/qualitygates/project_status:
    get:
      parameters:
      - allowEmptyValue: true
        description: Analysis id
        in: query
        name: analysisId
        schema:
          type: string
      - allowEmptyValue: true
        description: Branch key
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Project UUID. Doesn't work with branches or pull requests
        in: query
        name: projectId
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: projectKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Pull request id
        in: query
        name: pullRequest
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to project_status
  /api/qualitygates/remove_group:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality Gate name
        in: query
        name: gateName
        schema:
          type: string
      - allowEmptyValue: true
        description: Group name or 'anyone' (case insensitive)
        in: query
        name: groupName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_group
  /api/qualitygates/remove_user:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality Gate name
        in: query
        name: gateName
        schema:
          type: string
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_user
  /api/qualitygates/rename:
    post:
      parameters:
      - allowEmptyValue: true
        description: Current name of the quality gate
        in: query
        name: currentName
        schema:
          type: string
      - allowEmptyValue: true
        description: New name of the quality gate
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to rename
  /api/qualitygates/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: Quality Gate name
        in: query
        name: gateName
        schema:
          type: string
      - allowEmptyValue: true
        description: Page number
        in: query
        name: page
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size
        in: query
        name: pageSize
        schema:
          type: string
      - allowEmptyValue: true
        description: To search for projects containing this string. If this parameter
          is set, "selected" is set to "all".
        in: query
        name: query
        schema:
          type: string
      - allowEmptyValue: true
        description: Depending on the value, show only selected items (selected=selected),
          deselected items (selected=deselected), or all items with their selection
          status (selected=all).
        in: query
        name: selected
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/qualitygates/search_groups:
    get:
      parameters:
      - allowEmptyValue: true
        description: Quality Gate name
        in: query
        name: gateName
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0.
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to group names that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Depending on the value, show only selected items (selected=selected),
          deselected items (selected=deselected), or all items with their selection
          status (selected=all).
        in: query
        name: selected
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search_groups
  /api/qualitygates/search_users:
    get:
      parameters:
      - allowEmptyValue: true
        description: Quality Gate name
        in: query
        name: gateName
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0.
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to names or logins that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Depending on the value, show only selected items (selected=selected),
          deselected items (selected=deselected), or all items with their selection
          status (selected=all).
        in: query
        name: selected
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search_users
  /api/qualitygates/select:
    post:
      parameters:
      - allowEmptyValue: true
        description: Name of the quality gate
        in: query
        name: gateName
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: projectKey
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to select
  /api/qualitygates/set_as_default:
    post:
      parameters:
      - allowEmptyValue: true
        description: Name of the quality gate to set as default
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_as_default
  /api/qualitygates/show:
    get:
      parameters:
      - allowEmptyValue: true
        description: Name of the quality gate. Either id or name must be set
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to show
  /api/qualitygates/update_condition:
    post:
      parameters:
      - allowEmptyValue: true
        description: Condition error threshold
        in: query
        name: error
        schema:
          type: string
      - allowEmptyValue: true
        description: Condition ID
        in: query
        name: id
        schema:
          type: string
      - allowEmptyValue: true
        description: Condition metric.<br/> Only metric of the following types are
          allowed:<ul><li>INT</li><li>MILLISEC</li><li>RATING</li><li>WORK_DUR</li><li>FLOAT</li><li>PERCENT</li><li>LEVEL</li></ul>Following
          metrics are forbidden:<ul><li>alert_status</li><li>security_hotspots</li><li>new_security_hotspots</li></ul>
        in: query
        name: metric
        schema:
          type: string
      - allowEmptyValue: true
        description: Condition operator:<br/><ul><li>LT = is lower than</li><li>GT
          = is greater than</li></ul>
        in: query
        name: op
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_condition
  /api/qualityprofiles/activate_rule:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality Profile key. Can be obtained through <code>api/qualityprofiles/search</code>
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Parameters as semi-colon list of <code>key=value</code>. Ignored
          if parameter reset is true.
        in: query
        name: params
        schema:
          type: string
      - allowEmptyValue: true
        description: Reset severity and parameters of activated rule. Set the values
          defined on parent profile or from rule default values.
        in: query
        name: reset
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule key
        in: query
        name: rule
        schema:
          type: string
      - allowEmptyValue: true
        description: Severity. Ignored if parameter reset is true.
        in: query
        name: severity
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to activate_rule
  /api/qualityprofiles/activate_rules:
    post:
      parameters:
      - allowEmptyValue: true
        description: Filter rules that are activated or deactivated on the selected
          Quality profile. Ignored if the parameter 'qprofile' is not set.
        in: query
        name: activation
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of activation severities, i.e the severity
          of rules in Quality profiles.
        in: query
        name: active_severities
        schema:
          type: string
      - allowEmptyValue: true
        description: Ascending sort
        in: query
        name: asc
        schema:
          type: string
      - allowEmptyValue: true
        description: Filters rules added since date. Format is yyyy-MM-dd
        in: query
        name: available_since
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Clean Code Attribute Categories
        in: query
        name: cleanCodeAttributeCategories
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of CWE identifiers. Use 'unknown' to select
          rules not associated to any CWE.
        in: query
        name: cwe
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Software Quality Severities
        in: query
        name: impactSeverities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Software Qualities
        in: query
        name: impactSoftwareQualities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of values of inheritance for a rule within
          a quality profile. Used only if the parameter 'activation' is set.
        in: query
        name: inheritance
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter template rules
        in: query
        name: is_template
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of languages
        in: query
        name: languages
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP Top 10 2017 lowercase categories.
        in: query
        name: owaspTop10
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP Top 10 2021 lowercase categories.
        in: query
        name: owaspTop10-2021
        schema:
          type: string
      - allowEmptyValue: true
        description: UTF-8 search query
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile key to filter on. Used only if the parameter
          'activation' is set.
        in: query
        name: qprofile
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of repositories
        in: query
        name: repositories
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of rule to search for
        in: query
        name: rule_key
        schema:
          type: string
      - allowEmptyValue: true
        description: Sort field
        in: query
        name: s
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SANS Top 25 categories.
        in: query
        name: sansTop25
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of default severities. Not the same than
          severity of rules in Quality profiles.
        in: query
        name: severities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SonarSource security categories. Use
          'others' to select rules not associated with any category
        in: query
        name: sonarsourceSecurity
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of status codes
        in: query
        name: statuses
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of tags. Returned rules match any of the
          tags (OR operator)
        in: query
        name: tags
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality Profile key on which the rule activation is done. To
          retrieve a quality profile key please see <code>api/qualityprofiles/search</code>
        in: query
        name: targetKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Severity to set on the activated rules
        in: query
        name: targetSeverity
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the template rule to filter on. Used to search for the
          custom rules based on this template.
        in: query
        name: template_key
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of types. Returned rules match any of the
          tags (OR operator)
        in: query
        name: types
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to activate_rules
  /api/qualityprofiles/add_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality profile language.
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name.
        in: query
        name: qualityProfile
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_project
  /api/qualityprofiles/backup:
    get:
      parameters:
      - allowEmptyValue: true
        description: Quality profile language.
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name.
        in: query
        name: qualityProfile
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to backup
  /api/qualityprofiles/change_parent:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality profile language.
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: New parent profile name. <br> If no profile is provided, the
          inheritance link with current parent profile (if any) is broken, which deactivates
          all rules which come from the parent and are not overridden.
        in: query
        name: parentQualityProfile
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name.
        in: query
        name: qualityProfile
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to change_parent
  /api/qualityprofiles/changelog:
    get:
      parameters:
      - allowEmptyValue: true
        description: Quality profile language.
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name.
        in: query
        name: qualityProfile
        schema:
          type: string
      - allowEmptyValue: true
        description: Start date for the changelog (inclusive). <br>Either a date (server
          timezone) or datetime can be provided.
        in: query
        name: since
        schema:
          type: string
      - allowEmptyValue: true
        description: End date for the changelog (exclusive, strictly before). <br>Either
          a date (server timezone) or datetime can be provided.
        in: query
        name: to
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to changelog
  /api/qualityprofiles/copy:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality profile key
        in: query
        name: fromKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Name for the new quality profile.
        in: query
        name: toName
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to copy
  /api/qualityprofiles/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality profile language
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/qualityprofiles/deactivate_rule:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality Profile key. Can be obtained through <code>api/qualityprofiles/search</code>
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule key
        in: query
        name: rule
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to deactivate_rule
  /api/qualityprofiles/deactivate_rules:
    post:
      parameters:
      - allowEmptyValue: true
        description: Filter rules that are activated or deactivated on the selected
          Quality profile. Ignored if the parameter 'qprofile' is not set.
        in: query
        name: activation
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of activation severities, i.e the severity
          of rules in Quality profiles.
        in: query
        name: active_severities
        schema:
          type: string
      - allowEmptyValue: true
        description: Ascending sort
        in: query
        name: asc
        schema:
          type: string
      - allowEmptyValue: true
        description: Filters rules added since date. Format is yyyy-MM-dd
        in: query
        name: available_since
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Clean Code Attribute Categories
        in: query
        name: cleanCodeAttributeCategories
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of CWE identifiers. Use 'unknown' to select
          rules not associated to any CWE.
        in: query
        name: cwe
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Software Quality Severities
        in: query
        name: impactSeverities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Software Qualities
        in: query
        name: impactSoftwareQualities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of values of inheritance for a rule within
          a quality profile. Used only if the parameter 'activation' is set.
        in: query
        name: inheritance
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter template rules
        in: query
        name: is_template
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of languages
        in: query
        name: languages
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP Top 10 2017 lowercase categories.
        in: query
        name: owaspTop10
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP Top 10 2021 lowercase categories.
        in: query
        name: owaspTop10-2021
        schema:
          type: string
      - allowEmptyValue: true
        description: UTF-8 search query
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile key to filter on. Used only if the parameter
          'activation' is set.
        in: query
        name: qprofile
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of repositories
        in: query
        name: repositories
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of rule to search for
        in: query
        name: rule_key
        schema:
          type: string
      - allowEmptyValue: true
        description: Sort field
        in: query
        name: s
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SANS Top 25 categories.
        in: query
        name: sansTop25
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of default severities. Not the same than
          severity of rules in Quality profiles.
        in: query
        name: severities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SonarSource security categories. Use
          'others' to select rules not associated with any category
        in: query
        name: sonarsourceSecurity
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of status codes
        in: query
        name: statuses
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of tags. Returned rules match any of the
          tags (OR operator)
        in: query
        name: tags
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality Profile key on which the rule deactivation is done. To
          retrieve a profile key please see <code>api/qualityprofiles/search</code>
        in: query
        name: targetKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the template rule to filter on. Used to search for the
          custom rules based on this template.
        in: query
        name: template_key
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of types. Returned rules match any of the
          tags (OR operator)
        in: query
        name: types
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to deactivate_rules
  /api/qualityprofiles/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality profile language.
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name.
        in: query
        name: qualityProfile
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/qualityprofiles/export:
    get:
      parameters:
      - allowEmptyValue: true
        description: Output format. If left empty, the same format as api/qualityprofiles/backup
          is used. Possible values are described by api/qualityprofiles/exporters.
        in: query
        name: exporterKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile language
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name to export. If left empty, the default profile
          for the language is exported.
        in: query
        name: qualityProfile
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to export
  /api/qualityprofiles/exporters:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to exporters
  /api/qualityprofiles/importers:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to importers
  /api/qualityprofiles/inheritance:
    get:
      parameters:
      - allowEmptyValue: true
        description: Quality profile language.
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name.
        in: query
        name: qualityProfile
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to inheritance
  /api/qualityprofiles/projects:
    get:
      parameters:
      - allowEmptyValue: true
        description: Quality profile key
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to projects that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Depending on the value, show only selected items (selected=selected),
          deselected items (selected=deselected), or all items with their selection
          status (selected=all).
        in: query
        name: selected
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to projects
  /api/qualityprofiles/remove_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality profile language.
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name.
        in: query
        name: qualityProfile
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_project
  /api/qualityprofiles/rename:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality profile key
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: New quality profile name
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to rename
  /api/qualityprofiles/restore:
    post:
      parameters:
      - allowEmptyValue: true
        description: A profile backup file in XML format, as generated by api/qualityprofiles/backup
          or the former api/profiles/backup.
        in: query
        name: backup
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to restore
  /api/qualityprofiles/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: If set to true, return only the quality profiles marked as default
          for each language
        in: query
        name: defaults
        schema:
          type: string
      - allowEmptyValue: true
        description: Language key. If provided, only profiles for the given language
          are returned.
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name
        in: query
        name: qualityProfile
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/qualityprofiles/set_default:
    post:
      parameters:
      - allowEmptyValue: true
        description: Quality profile language.
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile name.
        in: query
        name: qualityProfile
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_default
  /api/rules/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: Clean code attribute
        in: query
        name: cleanCodeAttribute
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the custom rule
        in: query
        name: customKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Impacts as semi-colon list of &lt;software_quality&gt;=&lt;severity&gt;
        in: query
        name: impacts
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule description in <a href='/formatting/help'>markdown format</a>
        in: query
        name: markdownDescription
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Parameters as semi-colon list of &lt;key&gt;=&lt;value&gt;
        in: query
        name: params
        schema:
          type: string
      - allowEmptyValue: true
        description: If set to true and if the rule has been deactivated (status 'REMOVED'),
          a status 409 will be returned
        in: query
        name: preventReactivation
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule severity
        in: query
        name: severity
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule status
        in: query
        name: status
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the template rule in order to create a custom rule
        in: query
        name: templateKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule type
        in: query
        name: type
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/rules/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Rule key
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/rules/repositories:
    get:
      parameters:
      - allowEmptyValue: true
        description: A language key; if provided, only repositories for the given
          language will be returned
        in: query
        name: language
        schema:
          type: string
      - allowEmptyValue: true
        description: A pattern to match repository keys/names against
        in: query
        name: q
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to repositories
  /api/rules/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: Filter rules that are activated or deactivated on the selected
          Quality profile. Ignored if the parameter 'qprofile' is not set.
        in: query
        name: activation
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of activation severities, i.e the severity
          of rules in Quality profiles.
        in: query
        name: active_severities
        schema:
          type: string
      - allowEmptyValue: true
        description: Ascending sort
        in: query
        name: asc
        schema:
          type: string
      - allowEmptyValue: true
        description: Filters rules added since date. Format is yyyy-MM-dd
        in: query
        name: available_since
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Clean Code Attribute Categories
        in: query
        name: cleanCodeAttributeCategories
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of CWE identifiers. Use 'unknown' to select
          rules not associated to any CWE.
        in: query
        name: cwe
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of additional fields to be returned in the
          response. All the fields are returned by default, except actives.
        in: query
        name: f
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of the facets to be computed. No facet is
          computed by default.
        in: query
        name: facets
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Software Quality Severities
        in: query
        name: impactSeverities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of Software Qualities
        in: query
        name: impactSoftwareQualities
        schema:
          type: string
      - allowEmptyValue: true
        description: Include external engine rules in the results
        in: query
        name: include_external
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of values of inheritance for a rule within
          a quality profile. Used only if the parameter 'activation' is set.
        in: query
        name: inheritance
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter template rules
        in: query
        name: is_template
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of languages
        in: query
        name: languages
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP Top 10 2017 lowercase categories.
        in: query
        name: owaspTop10
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of OWASP Top 10 2021 lowercase categories.
        in: query
        name: owaspTop10-2021
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: UTF-8 search query
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Quality profile key to filter on. Used only if the parameter
          'activation' is set.
        in: query
        name: qprofile
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of repositories
        in: query
        name: repositories
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of rule to search for
        in: query
        name: rule_key
        schema:
          type: string
      - allowEmptyValue: true
        description: Sort field
        in: query
        name: s
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SANS Top 25 categories.
        in: query
        name: sansTop25
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of default severities. Not the same than
          severity of rules in Quality profiles.
        in: query
        name: severities
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of SonarSource security categories. Use
          'others' to select rules not associated with any category
        in: query
        name: sonarsourceSecurity
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of status codes
        in: query
        name: statuses
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of tags. Returned rules match any of the
          tags (OR operator)
        in: query
        name: tags
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the template rule to filter on. Used to search for the
          custom rules based on this template.
        in: query
        name: template_key
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of types. Returned rules match any of the
          tags (OR operator)
        in: query
        name: types
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/rules/show:
    get:
      parameters:
      - allowEmptyValue: true
        description: Show rule's activations for all profiles ("active rules")
        in: query
        name: actives
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule key
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to show
  /api/rules/tags:
    get:
      parameters:
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to tags that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to tags
  /api/rules/update:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the rule to update
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule description (mandatory for custom rule and manual rule)
          in <a href='/formatting/help'>markdown format</a>
        in: query
        name: markdownDescription
        schema:
          type: string
      - allowEmptyValue: true
        description: Optional note in <a href='/formatting/help'>markdown format</a>.
          Use empty value to remove current note. Note is not changed if the parameter
          is not set.
        in: query
        name: markdown_note
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule name (mandatory for custom rule)
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Parameters as semi-colon list of <key>=<value>, for example 'params=key1=v1;key2=v2'
          (Only when updating a custom rule)
        in: query
        name: params
        schema:
          type: string
      - allowEmptyValue: true
        description: Base effort of the remediation function of the rule
        in: query
        name: remediation_fn_base_effort
        schema:
          type: string
      - allowEmptyValue: true
        description: Type of the remediation function of the rule
        in: query
        name: remediation_fn_type
        schema:
          type: string
      - allowEmptyValue: true
        description: Gap multiplier of the remediation function of the rule
        in: query
        name: remediation_fy_gap_multiplier
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule severity (Only when updating a custom rule)
        in: query
        name: severity
        schema:
          type: string
      - allowEmptyValue: true
        description: Rule status (Only when updating a custom rule)
        in: query
        name: status
        schema:
          type: string
      - allowEmptyValue: true
        description: Optional comma-separated list of tags to set. Use blank value
          to remove current tags. Tags are not changed if the parameter is not set.
        in: query
        name: tags
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update
  /api/server/version:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to version
  /api/settings/list_definitions:
    get:
      parameters:
      - allowEmptyValue: true
        description: Component key
        in: query
        name: component
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list_definitions
  /api/settings/reset:
    post:
      parameters:
      - allowEmptyValue: true
        description: Component key. Only keys for projects, applications, portfolios
          or subportfolios are accepted.
        in: query
        name: component
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of keys
        in: query
        name: keys
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to reset
  /api/settings/set:
    post:
      parameters:
      - allowEmptyValue: true
        description: Component key. Only keys for projects, applications, portfolios
          or subportfolios are accepted.
        in: query
        name: component
        schema:
          type: string
      - allowEmptyValue: true
        description: Setting field values. To set several values, the parameter must
          be called once for each value.
        in: query
        name: fieldValues
        schema:
          type: string
      - allowEmptyValue: true
        description: Setting key
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Setting value. To reset a value, please use the reset web service.
        in: query
        name: value
        schema:
          type: string
      - allowEmptyValue: true
        description: Setting multi value. To set several values, the parameter must
          be called once for each value.
        in: query
        name: values
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set
  /api/settings/values:
    get:
      parameters:
      - allowEmptyValue: true
        description: Component key
        in: query
        name: component
        schema:
          type: string
      - allowEmptyValue: true
        description: List of setting keys
        in: query
        name: keys
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to values
  /api/sources/raw:
    get:
      parameters:
      - allowEmptyValue: true
        description: File key
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to raw
  /api/sources/scm:
    get:
      parameters:
      - allowEmptyValue: true
        description: Group lines by SCM commit if value is false, else display commits
          for each line, even if two consecutive lines relate to the same commit.
        in: query
        name: commits_by_line
        schema:
          type: string
      - allowEmptyValue: true
        description: First line to return. Starts at 1
        in: query
        name: from
        schema:
          type: string
      - allowEmptyValue: true
        description: File key
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Last line to return (inclusive)
        in: query
        name: to
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to scm
  /api/sources/show:
    get:
      parameters:
      - allowEmptyValue: true
        description: First line to return. Starts at 1
        in: query
        name: from
        schema:
          type: string
      - allowEmptyValue: true
        description: File key
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Last line to return (inclusive)
        in: query
        name: to
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to show
  /api/system/change_log_level:
    post:
      parameters:
      - allowEmptyValue: true
        description: 'The new level. Be cautious: DEBUG, and even more TRACE, may
          have performance impacts.'
        in: query
        name: level
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to change_log_level
  /api/system/db_migration_status:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to db_migration_status
  /api/system/health:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to health
  /api/system/info:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to info
  /api/system/logs:
    get:
      parameters:
      - allowEmptyValue: true
        description: Name of the logs to get
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to logs
  /api/system/migrate_db:
    post:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to migrate_db
  /api/system/ping:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to ping
  /api/system/restart:
    post:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to restart
  /api/system/status:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to status
  /api/system/upgrades:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to upgrades
  /api/user_groups/add_user:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: Group name
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_user
  /api/user_groups/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: Description for the new group. A group description cannot be
          larger than 200 characters.
        in: query
        name: description
        schema:
          type: string
      - allowEmptyValue: true
        description: Name for the new group. A group name cannot be larger than 255
          characters and must be unique. The value 'anyone' (whatever the case) is
          reserved and cannot be used.
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/user_groups/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Group name
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/user_groups/remove_user:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: Group name
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_user
  /api/user_groups/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: Comma-separated list of the fields to be returned in response.
          All the fields are returned by default.
        in: query
        name: f
        schema:
          type: string
      - allowEmptyValue: true
        description: Return managed or non-managed groups. Only available for managed
          instances, throws for non-managed instances.
        in: query
        name: managed
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to names that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/user_groups/update:
    post:
      parameters:
      - allowEmptyValue: true
        description: Name of the group to be updated.
        in: query
        name: currentName
        schema:
          type: string
      - allowEmptyValue: true
        description: New optional description for the group. A group description cannot
          be larger than 200 characters. If value is not defined, then description
          is not changed.
        in: query
        name: description
        schema:
          type: string
      - allowEmptyValue: true
        description: New optional name for the group. A group name cannot be larger
          than 255 characters and must be unique. Value 'anyone' (whatever the case)
          is reserved and cannot be used. If value is empty or not defined, then name
          is not changed.
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update
  /api/user_groups/users:
    get:
      parameters:
      - allowEmptyValue: true
        description: Group name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0.
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to names or logins that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Depending on the value, show only selected items (selected=selected),
          deselected items (selected=deselected), or all items with their selection
          status (selected=all).
        in: query
        name: selected
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to users
  /api/user_tokens/generate:
    post:
      parameters:
      - allowEmptyValue: true
        description: The expiration date of the token being generated, in ISO 8601
          format (YYYY-MM-DD). If not set, default to no expiration.
        in: query
        name: expirationDate
        schema:
          type: string
      - allowEmptyValue: true
        description: User login. If not set, the token is generated for the authenticated
          user.
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: Token name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: The key of the only project that can be analyzed by the PROJECT_ANALYSIS_TOKEN
          being generated.
        in: query
        name: projectKey
        schema:
          type: string
      - allowEmptyValue: true
        description: Token Type. If this parameters is set to PROJECT_ANALYSIS_TOKEN,
          it is necessary to provide the projectKey parameter too.
        in: query
        name: type
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to generate
  /api/user_tokens/revoke:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: Token name
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to revoke
  /api/user_tokens/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/users/anonymize:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to anonymize
  /api/users/change_password:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: New password
        in: query
        name: password
        schema:
          type: string
      - allowEmptyValue: true
        description: Previous password. Required when changing one's own password.
        in: query
        name: previousPassword
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to change_password
  /api/users/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: User email
        in: query
        name: email
        schema:
          type: string
      - allowEmptyValue: true
        description: Specify if the user should be authenticated from SonarQube server
          or from an external authentication system. Password should not be set when
          local is set to false.
        in: query
        name: local
        schema:
          type: string
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: User name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: User password. Only mandatory when creating local user, otherwise
          it should not be set
        in: query
        name: password
        schema:
          type: string
      - allowEmptyValue: true
        description: List of SCM accounts. To set several values, the parameter must
          be called once for each value.
        in: query
        name: scmAccount
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/users/deactivate:
    post:
      parameters:
      - allowEmptyValue: true
        description: Anonymize user in addition to deactivating it
        in: query
        name: anonymize
        schema:
          type: string
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to deactivate
  /api/users/groups:
    get:
      parameters:
      - allowEmptyValue: true
        description: A user login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0.
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Limit search to group names that contain the supplied string.
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: Depending on the value, show only selected items (selected=selected),
          deselected items (selected=deselected), or all items with their selection
          status (selected=all).
        in: query
        name: selected
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to groups
  /api/users/search:
    get:
      parameters:
      - allowEmptyValue: true
        description: Return deactivated users instead of active users
        in: query
        name: deactivated
        schema:
          type: string
      - allowEmptyValue: true
        description: |
          Find a user by its external identity (ie. its login in the Identity Provider).
          This is case sensitive and only available with Administer System permission.
        in: query
        name: externalIdentity
        schema:
          type: string
      - allowEmptyValue: true
        description: |-
          Filter the users based on the last connection date field.
          Only users who interacted with this instance at or after the date will be returned.
          The format must be ISO 8601 datetime format (YYYY-MM-DDThh:mm:ss±hhmm)
        in: query
        name: lastConnectedAfter
        schema:
          type: string
      - allowEmptyValue: true
        description: |-
          Filter the users based on the last connection date field.
          Only users that never connected or who interacted with this instance at or before the date will be returned.
          The format must be ISO 8601 datetime format (YYYY-MM-DDThh:mm:ss±hhmm)
        in: query
        name: lastConnectedBefore
        schema:
          type: string
      - allowEmptyValue: true
        description: Return managed or non-managed users. Only available for managed
          instances, throws for non-managed instances.
        in: query
        name: managed
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less or equal than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Filter on login, name and email.<br />This parameter can either
          perform an exact match, or a partial match (contains), it is case insensitive.
        in: query
        name: q
        schema:
          type: string
      - allowEmptyValue: true
        description: |-
          Filter the users based on the sonar lint last connection date field
          Only users who interacted with this instance using SonarLint at or after the date will be returned.
          The format must be ISO 8601 datetime format (YYYY-MM-DDThh:mm:ss±hhmm)
        in: query
        name: slLastConnectedAfter
        schema:
          type: string
      - allowEmptyValue: true
        description: |-
          Filter the users based on the sonar lint last connection date field.
          Only users that never connected or who interacted with this instance using SonarLint at or before the date will be returned.
          The format must be ISO 8601 datetime format (YYYY-MM-DDThh:mm:ss±hhmm)
        in: query
        name: slLastConnectedBefore
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to search
  /api/users/update:
    post:
      parameters:
      - allowEmptyValue: true
        description: User email
        in: query
        name: email
        schema:
          type: string
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: User name
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: SCM accounts. To set several values, the parameter must be called
          once for each value.
        in: query
        name: scmAccount
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update
  /api/users/update_identity_provider:
    post:
      parameters:
      - allowEmptyValue: true
        description: User login
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: New external identity, usually the login used in the authentication
          system. If not provided previous identity will be used.
        in: query
        name: newExternalIdentity
        schema:
          type: string
      - allowEmptyValue: true
        description: New external provider. Only authentication system installed are
          available. Use 'LDAP' identity provider for single server LDAP setup.Use
          'LDAP_{serverKey}' identity provider for multiple LDAP servers setup.
        in: query
        name: newExternalProvider
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_identity_provider
  /api/users/update_login:
    post:
      parameters:
      - allowEmptyValue: true
        description: The current login (case-sensitive)
        in: query
        name: login
        schema:
          type: string
      - allowEmptyValue: true
        description: The new login. It must not already exist.
        in: query
        name: newLogin
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update_login
  /api/views/add_application:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the application to be added
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio where the application will be added
        in: query
        name: portfolio
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_application
  /api/views/add_application_branch:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the application
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the branch
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_application_branch
  /api/views/add_portfolio:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the portfolio where a reference will be added
        in: query
        name: portfolio
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio to be added
        in: query
        name: reference
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_portfolio
  /api/views/add_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the portfolio
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the project
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_project
  /api/views/add_project_branch:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the branch
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the project
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to add_project_branch
  /api/views/applications:
    get:
      parameters:
      - allowEmptyValue: true
        description: Key of the would-be parent portfolio
        in: query
        name: portfolio
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to applications
  /api/views/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: Description for the new portfolio, can be left blank
        in: query
        name: description
        schema:
          type: string
      - allowEmptyValue: true
        description: Key for the new portfolio. A suitable key will be generated if
          not provided
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Name for the new portfolio
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the parent portfolio, when creating a sub portfolio
        in: query
        name: parent
        schema:
          type: string
      - allowEmptyValue: true
        description: Whether the created portfolio or application should be visible
          to everyone, or only specific user/groups.<br/>Only applies to root portfolios.
          If no visibility is specified, the default visibility will be used.
        in: query
        name: visibility
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/views/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: Portfolio key
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/views/list:
    get:
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/views/move:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the destination portfolio
        in: query
        name: destination
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio to move
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to move
  /api/views/move_options:
    get:
      parameters:
      - allowEmptyValue: true
        description: Key of the portfolio to move
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to move_options
  /api/views/portfolios:
    get:
      parameters:
      - allowEmptyValue: true
        description: Key of the would-be parent portfolio
        in: query
        name: portfolio
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to portfolios
  /api/views/remove_application:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the application to be removed
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Portfolio key
        in: query
        name: portfolio
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_application
  /api/views/remove_application_branch:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the project
        in: query
        name: application
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the branch
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_application_branch
  /api/views/remove_portfolio:
    post:
      parameters:
      - allowEmptyValue: true
        description: Portfolio key
        in: query
        name: portfolio
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the referenced portfolio to be removed
        in: query
        name: reference
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_portfolio
  /api/views/remove_project:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the portfolio
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the project
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_project
  /api/views/remove_project_branch:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the branch
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the project
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to remove_project_branch
  /api/views/set_manual_mode:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the portfolio or sub-portfolio to update
        in: query
        name: portfolio
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_manual_mode
  /api/views/set_none_mode:
    post:
      parameters:
      - allowEmptyValue: true
        description: Key of the portfolio or sub-portfolio to update
        in: query
        name: portfolio
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_none_mode
  /api/views/set_regexp_mode:
    post:
      parameters:
      - allowEmptyValue: true
        description: Selects a branch in all matched projects, instead of using their
          main branches
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio or sub-portfolio to update
        in: query
        name: portfolio
        schema:
          type: string
      - allowEmptyValue: true
        description: A valid regexp with respect to the JDK's ``java.util.regex.Pattern``
          class
        in: query
        name: regexp
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_regexp_mode
  /api/views/set_remaining_projects_mode:
    post:
      parameters:
      - allowEmptyValue: true
        description: Selects a branch in all matched projects, instead of using their
          main branches
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio or sub-portfolio to update
        in: query
        name: portfolio
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_remaining_projects_mode
  /api/views/set_tags_mode:
    post:
      parameters:
      - allowEmptyValue: true
        description: Selects a branch in all matched projects, instead of using their
          main branches
        in: query
        name: branch
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio or sub-portfolio to update
        in: query
        name: portfolio
        schema:
          type: string
      - allowEmptyValue: true
        description: Comma-separated list of tags. It's not possible to set nothing.
        in: query
        name: tags
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to set_tags_mode
  /api/views/show:
    get:
      parameters:
      - allowEmptyValue: true
        description: The key of the portfolio
        in: query
        name: key
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to show
  /api/views/update:
    post:
      parameters:
      - allowEmptyValue: true
        description: New description for the portfolio
        in: query
        name: description
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the portfolio to update
        in: query
        name: key
        schema:
          type: string
      - allowEmptyValue: true
        description: New name for the portfolio
        in: query
        name: name
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update
  /api/webhooks/create:
    post:
      parameters:
      - allowEmptyValue: true
        description: Name displayed in the administration console of webhooks
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: The key of the project that will own the webhook
        in: query
        name: project
        schema:
          type: string
      - allowEmptyValue: true
        description: If provided, secret will be used as the key to generate the HMAC
          hex (lowercase) digest value in the 'X-Sonar-Webhook-HMAC-SHA256' header
        in: query
        name: secret
        schema:
          type: string
      - allowEmptyValue: true
        description: 'Server endpoint that will receive the webhook payload, for example
          ''http://my_server/foo''. If HTTP Basic authentication is used, HTTPS is
          recommended to avoid man in the middle attacks. Example: ''https://myLogin:myPassword@my_server/foo'''
        in: query
        name: url
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to create
  /api/webhooks/delete:
    post:
      parameters:
      - allowEmptyValue: true
        description: The key of the webhook to be deleted, auto-generated value can
          be obtained through api/webhooks/create or api/webhooks/list
        in: query
        name: webhook
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delete
  /api/webhooks/deliveries:
    get:
      parameters:
      - allowEmptyValue: true
        description: Id of the Compute Engine task
        in: query
        name: ceTaskId
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the project
        in: query
        name: componentKey
        schema:
          type: string
      - allowEmptyValue: true
        description: 1-based page number
        in: query
        name: p
        schema:
          type: string
      - allowEmptyValue: true
        description: Page size. Must be greater than 0 and less than 500
        in: query
        name: ps
        schema:
          type: string
      - allowEmptyValue: true
        description: Key of the webhook that triggered those deliveries, auto-generated
          value that can be obtained through api/webhooks/create or api/webhooks/list
        in: query
        name: webhook
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to deliveries
  /api/webhooks/delivery:
    get:
      parameters:
      - allowEmptyValue: true
        description: Id of delivery
        in: query
        name: deliveryId
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to delivery
  /api/webhooks/list:
    get:
      parameters:
      - allowEmptyValue: true
        description: Project key
        in: query
        name: project
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/webhooks/update:
    post:
      parameters:
      - allowEmptyValue: true
        description: new name of the webhook
        in: query
        name: name
        schema:
          type: string
      - allowEmptyValue: true
        description: If provided, secret will be used as the key to generate the HMAC
          hex (lowercase) digest value in the 'X-Sonar-Webhook-HMAC-SHA256' header.
          If blank, any secret previously configured will be removed. If not set,
          the secret will remain unchanged.
        in: query
        name: secret
        schema:
          type: string
      - allowEmptyValue: true
        description: new url to be called by the webhook
        in: query
        name: url
        schema:
          type: string
      - allowEmptyValue: true
        description: The key of the webhook to be updated, auto-generated value can
          be obtained through api/webhooks/create or api/webhooks/list
        in: query
        name: webhook
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to update
  /api/webservices/list:
    get:
      parameters:
      - allowEmptyValue: true
        description: Include web services that are implemented for internal use only.
          Their forward-compatibility is not assured
        in: query
        name: include_internals
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to list
  /api/webservices/response_example:
    get:
      parameters:
      - allowEmptyValue: true
        description: Action of the web service
        in: query
        name: action
        schema:
          type: string
      - allowEmptyValue: true
        description: Controller of the web service
        in: query
        name: controller
        schema:
          type: string
      responses:
        2XX:
          content:
            application/json:
              schema: {}
          description: Response to response_example
